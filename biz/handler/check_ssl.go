// Code generated by hertz generator.

package handler

import (
	"context"
	"github.com/soladxy/oyasumi/biz/service/ssl"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/soladxy/oyasumi/biz/consts"
	"github.com/soladxy/oyasumi/biz/container"
	oyasumi "github.com/soladxy/oyasumi/biz/model/oyasumi"
	"github.com/soladxy/oyasumi/biz/util"
)

// CheckSSL .
// @router /api/checkSsl [GET]
func CheckSSL(ctx context.Context, c *app.RequestContext, container *container.Container) {
	var err error
	var req oyasumi.CheckSSLReq
	err = c.BindAndValidate(&req)
	if err != nil {
		util.SendErrResponse(c, consts.ParamErr)
		return
	}

	if req.Port == "" || req.Host == "" {
		util.SendErrResponse(c, consts.ParamErr)
		return
	}

	expired, msg, err := ssl.NewSslService(container).HostExpired(ctx, req.Host, req.Port)
	if err != nil {
		util.SendErrResponse(c, consts.DownstreamErr.AppendMsg(err.Error()))
		return
	}

	resp := new(oyasumi.CheckSSLResp)
	resp.Data = &oyasumi.CheckSSLData{
		IsExpired: expired,
		Msg:       msg,
	}

	util.SendSuccessResponse(c, resp)
}
